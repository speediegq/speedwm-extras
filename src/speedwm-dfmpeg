#!/bin/sh
# speedwm-dfmpeg
# dmenu/other run launcher GUI for recording your screen with ffmpeg
#
# Licensed under MIT, written by speedie
# Modified version for speedwm (available https://speedie.gq/speedwm)
# https://speedie.gq/dmenu-scripts

# speedwm specfic dotfile directory, probably don't change
[ -z "$DFMPEG_DOTDIR" ] && DFMPEG_DOTDIR="$HOME/.config/speedwm"
[ -z "$NOMKCONFIG" ] && NOMKCONFIG=false
[ -z "$HAVEGRID" ] && HAVEGRID=true
[ -z "$RUNLAUNCHER" ] && RUNLAUNCHER=dmenu
[ "$1" = "-s" ] && pkill -x ffmpeg && rm -f /tmp/dfmpeg-recording && STATUS=idle && exit

mkdir -p "$DFMPEG_DOTDIR"

MKCONFIG() {
    [ -e "$DFMPEG_DOTDIR/dfmpegrc" ] && . "$DFMPEG_DOTDIR/dfmpegrc" && return || \
        cat << CFGFILE > "$DFMPEG_DOTDIR/dfmpegrc"
# dfmpeg config file
# See https://codeberg.org/speedie/speedwm-extras for more information
RESOLUTION="\$(xdpyinfo | awk '/dimensions/ {print \$2}')" # The resolution to record in
AUDIO_BACKEND="pulse" # How to capture audio (alsa/pulse)
AUDIO_DEVICE="default" # Device to capture audio from. If you're using pulseaudio, check this using pactl list short sources. Set to default to use default.
FRAME_RATE="60" # Frame rate to capture in.
RECORD_DEVICE="x11grab" # Probably do not change.
OUTPUT_PATH="$HOME/Recordings" # Path where videos will be saved.
OUTPUT_FORMAT="mp4" # What format to use
OUTPUT_FILENAME="dfmpeg-output-"\$(date "+%d_%m_%y-%H%M%S")"" # File name of the output. Probably don't need to change.
ENCODE=true # Encode or not (true/false)
ENCODE_CODEC=libx264 # Codec to encode in
ENCODE_PRESET=ultrafast # ffmpeg preset. Available options: ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow
WH=":0.0" # Width and height, no need to change, defaults should work.

# Extra features
TERM="st" # Terminal to use when editing the configuration file.
EDITOR="vim" # Editor to edit the config file with
MEDIA_PLAYER="mpv" # Media player to play videos in
CFGFILE
}

MKCONFIG

OUTPUT_FILENAME="$OUTPUT_PATH/$OUTPUT_FILENAME.$OUTPUT_FORMAT"

if [ "$ENCODE" = "false" ]; then
		startrec="ffmpeg -f $RECORD_DEVICE -s $RESOLUTION -i $WH -f $AUDIO_BACKEND -r $FRAME_RATE -i $AUDIO_DEVICE $OUTPUT_FILENAME"
		startrec_no_audio="ffmpeg -y -f $RECORD_DEVICE -s $RESOLUTION -r $FRAME_RATE -i $WH $OUTPUT_FILENAME"
else
		startrec="ffmpeg -y -f x11grab -framerate $FRAME_RATE -s $RESOLUTION -i $WH -f $AUDIO_BACKEND -i $AUDIO_DEVICE -r 30 -c:v $ENCODE_CODEC -crf 0 -preset ultrafast -c:a aac $OUTPUT_FILENAME"
		startrec_no_audio="ffmpeg -y -f x11grab -framerate $FRAME_RATE -s $RESOLUTION -i $WH -r 30 -c:v $ENCODE_CODEC -crf 0 -preset ultrafast -c:a aac $OUTPUT_FILENAME"
		touch /tmp/isencoding
		echo "$ENCODE_CODEC" > /tmp/encoding-codec
fi

# Call this function to encode a video manually.
# /tmp/rec.$OUTPUT_FORMAT must be the file. Consider copying it there and then copying it back.
encode() {
			cp "$(cat /tmp/outputfilename)" "/tmp/rec.$OUTPUT_FORMAT"
			ffmpeg -i /tmp/rec.$OUTPUT_FORMAT -c:v $ENCODE_CODEC -preset $ENCODE_PRESET -threads 0 -b:v -pass 1 -f $OUTPUT_FORMAT -qp 0
			cp "/tmp/rec.$OUTPUT_FORMAT" "$(cat /tmp/outputfilename)"
			rm -f "/tmp/rec.$OUTPUT_FORMAT"
}

# Hardcoded version number
dfmpeg_ver="2022-12-11-r1"
about_screen="dfmpeg $dfmpeg_ver."

# About screen text
about_screen_2="Licensed under MIT, written by speedie.gq and emilyd."
about_screen_3="Modified for https://speedie.gq/speedwm"
about_screen_4="https://speedie.gq/dmenu-scripts"

encodeopts() {

  case "$(printf 'Encode last recording\nEncode video\n------\n..\nExit' | $RUNLAUNCHER -l 40 -p 'Encoding options')" in
  "Encode last recording") encode ; exit 0 ;;
  "Encode video") echo "$(echo "" | $RUNLAUNCHER -l 1 $GRIDARG $GRIDNUM -p "What file do you want to encode?")" > /tmp/outputfilename && encode ; exit 0 ;;
  "------") exit 0 ;;
  "Exit") exit 0 ;;
  "..") $0 && exit 0 ;;
  "") exit 0 ;;
  esac
}

# More options
MORE_OPTIONS() {
  case "$(printf 'Encode\nConvert\nConfigure\n------\n..\nExit' | $RUNLAUNCHER -l 40 -p 'More options')" in
  "Encode last recording") [ "$ENCODE" != "false" ] && encode ; exit 0 ;;
  "Encode video") echo "$(echo "" | $RUNLAUNCHER -l 1 $GRIDARG $GRIDNUM -p "What file do you want to encode?")" > /tmp/outputfilename && encode ; exit 0 ;;
  "Encode") encodeopts ; exit 0 ;;
  "Configure") $TERM $EDITOR "$DFMPEG_DOTDIR/dfmpegrc" ; exit 0 ;;
  "") exit 0 ;;
  "..") $0 && exit 0 ;;
  "------") exit 0 ;;
  esac
}

case "$(printf 'Start\nStop\nStart without audio\nPlay last\n------\nMore options\nAbout\nExit' | $RUNLAUNCHER -l 40 -p 'Record your screen:')" in
	"Exit") STATUS=idle && exit 0 ;;
	"Start") touch /tmp/isaudio ; echo "$OUTPUT_FILENAME" > /tmp/outputfilename && STATUS=recording && touch /tmp/dfmpeg-recording
	$startrec && exit 0 ;;
	"Stop") pkill -x ffmpeg ; rm /tmp/dfmpeg-recording ; STATUS=idle ;;
	"Start without audio") echo "$OUTPUT_FILENAME" > /tmp/outputfilename && STATUS=recording && touch /tmp/dfmpeg-recording
	$startrec_no_audio && exit 0 ;;
	"Play last") DFMPEG_STATUS=idle && $MEDIA_PLAYER "$(cat /tmp/outputfilename)" && exit 0 ;;
	"More options") MORE_OPTIONS && exit 0 ;;
	"") exit 0 ;;
	"About")
		printf "$about_screen\n$about_screen_2\n$about_screen_3\n$about_screen_4\n" | $RUNLAUNCHER -l 40 $GRIDARG $GRIDNUM
	;;
esac
